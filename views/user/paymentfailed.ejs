<%- include("../../views/partials/user/header") %>

<style>
  .failed-container {
    max-width: 800px;
    margin: 50px auto;
    background: #fff;
    border-radius: 15px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    padding: 40px;
    text-align: center;
  }

  .failed-icon {
    width: 100px;
    height: 100px;
    background: #ff6b6b;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 30px;
    animation: pulse 2s infinite;
  }

  @keyframes pulse {
    0% {
      box-shadow: 0 0 0 0 rgba(255, 107, 107, 0.4);
    }
    70% {
      box-shadow: 0 0 0 20px rgba(255, 107, 107, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(255, 107, 107, 0);
    }
  }

  .failed-icon i {
    font-size: 50px;
    color: #fff;
  }

  .failed-title {
    font-size: 32px;
    font-weight: 700;
    color: #333;
    margin-bottom: 20px;
  }

  .failed-message {
    font-size: 18px;
    color: #555;
    margin-bottom: 30px;
    line-height: 1.6;
  }

  .error-ref {
    background: #f8f9fa;
    border-radius: 10px;
    padding: 20px;
    margin: 20px 0 30px;
  }

  .error-ref-title {
    font-size: 16px;
    color: #666;
    margin-bottom: 10px;
  }

  .error-ref-code {
    font-size: 18px;
    font-weight: 600;
    color: #ff6b6b;
    word-break: break-all;
  }

  .btn-container {
    display: flex;
    gap: 20px;
    justify-content: center;
    margin-top: 30px;
    flex-wrap: wrap;
  }

  .failed-btn {
    padding: 12px 30px;
    border-radius: 50px;
    font-size: 16px;
    font-weight: 600;
    transition: all 0.3s ease;
    cursor: pointer;
    text-decoration: none;
    display: inline-block;
  }

  .btn-primary {
    background: #82ae46;
    color: #fff;
    border: 2px solid #82ae46;
  }

  .btn-primary:hover {
    background: #6b8e23;
    border-color: #6b8e23;
  }

  .btn-outline {
    background: transparent;
    color: #82ae46;
    border: 2px solid #82ae46;
  }

  .btn-outline:hover {
    background: #f0f8e6;
  }

  .btn-retry {
    background: #007bff;
    color: #fff;
    border: 2px solid #007bff;
  }

  .btn-retry:hover {
    background: #0069d9;
    border-color: #0069d9;
  }

  .failed-info {
    margin-top: 30px;
    font-size: 14px;
    color: #666;
  }

  .hero-wrap {
    background-size: cover;
    background-position: center;
    padding: 100px 0;
  }

  .collapsible {
    background-color: #f8f9fa;
    color: #555;
    cursor: pointer;
    padding: 18px;
    width: 100%;
    border: none;
    text-align: left;
    outline: none;
    font-size: 16px;
    border-radius: 8px;
    margin-top: 20px;
    font-weight: 600;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .collapsible:after {
    content: '\f078';
    font-family: 'FontAwesome';
    font-size: 14px;
    transition: all 0.3s;
  }

  .collapsible.active:after {
    transform: rotate(180deg);
  }

  .content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-out;
    background-color: #f8f9fa;
    border-radius: 0 0 8px 8px;
    margin-top: -8px;
  }

  .content-inner {
    padding: 0 18px 18px;
    text-align: left;
  }

  .error-details {
    background: #fff;
    border-radius: 8px;
    padding: 15px;
    margin-top: 10px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
  }

  .error-details p {
    margin: 8px 0;
    font-size: 14px;
    color: #666;
  }

  .error-details p span {
    font-weight: 600;
    color: #555;
  }

  @media (max-width: 768px) {
    .failed-container {
      margin: 30px 15px;
      padding: 30px 20px;
    }
    .failed-title {
      font-size: 28px;
    }
    .failed-message {
      font-size: 16px;
    }
    .btn-container {
      flex-direction: column;
      gap: 15px;
    }
    .failed-btn {
      width: 100%;
    }
    .collapsible {
      padding: 15px;
      font-size: 15px;
    }
  }
</style>

<div class="hero-wrap hero-bread" style="background-image: url('/images/ss6.jpg');">
  <div class="container">
    <div class="row no-gutters slider-text align-items-center justify-content-center">
      <div class="col-md-9 ftco-animate text-center">
        <p class="breadcrumbs">
          <span class="mr-2"><a href="/">Home</a></span>
          <span>Order</span>
          <span>Failed</span>
        </p>
        <h1 class="mb-0 bread">Order Failed</h1>
      </div>
    </div>
  </div>
</div>

<section class="ftco-section bg-light">
  <div class="container">
    <div class="failed-container">
      <div class="failed-icon">
        <i class="fa fa-exclamation-circle"></i>
      </div>

      <h1 class="failed-title">Order Failed</h1>

      <p class="failed-message">
        We're sorry, but there was an issue processing your order.
        The payment was not completed successfully.
      </p>

      <div class="error-ref">
        <p class="error-ref-title">Error Reference</p>
        <p class="error-ref-code" id="errorReference">
          <%= error || 'Error reference not available' %>
        </p>
      </div>

      <div class="btn-container">
        <button class="failed-btn btn-retry" id="retryOrderBtn">
          <i class="fa fa-refresh mr-2"></i> Retry Order
        </button>
        <a href="/cart" class="failed-btn btn-outline">
          <i class="fa fa-shopping-cart mr-2"></i> Review Cart
        </a>
      </div>

      <button class="collapsible">
        View Error Details <i class="fa fa-chevron-down"></i>
      </button>
      <div class="content">
        <div class="content-inner">
          <div class="error-details">
            <p>
              <span>Error Message:</span>
              <%= error || 'There was an issue processing your payment.' %>
            </p>
            <p><span>Date & Time:</span> <%= new Date().toLocaleString() %></p>
          </div>
        </div>
      </div>

      <div class="failedÂ with the checkout process.</p>
        <p>
          Need help? <a href="/contact">Contact our support team</a>
        </p>
      </div>
    </div>
  </div>
</section>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  // Collapsible Error Details
  const coll = document.querySelector(".collapsible");
  coll.addEventListener("click", function () {
    this.classList.toggle("active");
    const content = this.nextElementSibling;
    if (content.style.maxHeight) {
      content.style.maxHeight = null;
    } else {
      content.style.maxHeight = content.scrollHeight + "px";
    }
  });

  // Retry Order with Razorpay
  document.getElementById("retryOrderBtn").addEventListener("click", async function () {
    try {
      // Fetch the last attempted order details or cart for retry
      const response = await fetch('/retry-order', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': '<%= user.csrfToken || "" %>',
        },
        body: JSON.stringify({}),
      });

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.message || 'Failed to initiate retry');
      }

      if (data.razorpayOrder) {
        if (typeof Razorpay === 'undefined') {
          throw new Error('Razorpay SDK not loaded');
        }

        const options = {
          key: data.razorpayOrder.key,
          amount: data.razorpayOrder.amount,
          currency: data.razorpayOrder.currency,
          order_id: data.razorpayOrder.id,
          name: 'MobiVault',
          description: 'Retry Order Payment',
          image: '/images/admin-logo.png',
          handler: async function (response) {
            try {
              const verifyResponse = await fetch('/verify-razorpay-payment', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'X-CSRF-Token': '<%= user.csrfToken || "" %>',
                },
                body: JSON.stringify({
                  razorpay_order_id: response.razorpay_order_id,
                  razorpay_payment_id: response.razorpay_payment_id,
                  razorpay_signature: response.razorpay_signature,
                  orderDetails: data.orderDetails,
                }),
              });

              const verifyData = await verifyResponse.json();

              if (verifyResponse.ok && verifyData.success) {
                Swal.fire({
                  icon: 'success',
                  title: 'Order Placed',
                  text: 'Your order has been successfully placed!',
                  confirmButtonColor: '#82ae46',
                  timer: 2000,
                  showConfirmButton: false,
                }).then(() => {
                  window.location.href = `/order/success?orderId=${verifyData.orderId}`;
                });
              } else {
                throw new Error(verifyData.message || 'Payment verification failed');
              }
            } catch (error) {
              console.error('Razorpay verification error:', error);
              Swal.fire({
                icon: 'error',
                title: 'Payment Failed',
                text: error.message || 'Unable to verify payment. Please contact support.',
                confirmButtonColor: '#82ae46',
              }).then(() => {
                window.location.href = `/paymentfailedpage?error=${encodeURIComponent(
                  error.message || 'Verification failed'
                )}`;
              });
            }
          },
          prefill: {
            name: '<%= user.name || "" %>',
            email: '<%= user.email || "" %>',
            contact: '<%= user.phone || "" %>',
          },
          notes: {
            order_id: data.orderDetails.orderId || 'N/A',
          },
          theme: {
            color: '#82ae46',
          },
          method: {
            card: true,
            upi: true,
            netbanking: true,
            wallet: true,
            emi: true,
          },
          modal: {
            ondismiss: function () {
              Swal.fire({
                icon: 'warning',
                title: 'Payment Cancelled',
                text: 'You cancelled the payment. Please try again to complete your order.',
                confirmButtonColor: '#82ae46',
              }).then(() => {
                window.location.href = `/paymentfailedpage?error=${encodeURIComponent(
                  'Payment cancelled by user'
                )}`;
              });
            },
          },
        };

        const rzp = new Razorpay(options);
        rzp.on('payment.failed', function (response) {
          console.error('Razorpay payment failed:', response.error);
          Swal.fire({
            icon: 'error',
            title: 'Payment Failed',
            text: response.error.description || 'Payment failed. Please try again.',
            confirmButtonColor: '#82ae46',
          }).then(() => {
            window.location.href = `/paymentfailedpage?error=${encodeURIComponent(
              response.error.description || 'Payment failed'
            )}`;
          });
        });
        rzp.open();
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Retry Failed',
          text: data.message || 'Failed to retry order',
          confirmButtonColor: '#82ae46',
        });
      }
    } catch (error) {
      console.error('Error retrying order:', error);
      Swal.fire({
        icon: 'error',
        title: 'Retry Failed',
        text: 'An error occurred while retrying the order: ' + error.message,
        confirmButtonColor: '#82ae46',
      });
    }
  });
</script>

<%- include("../../views/partials/user/footer") %>