<%- include("../../views/partials/user/header") %>
<style>
    /* Main Layout Adjustments */
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 15px;
    }
    
    body {
        font-family: 'Poppins', Arial, sans-serif;
        color: #333;
        line-height: 1.6;
        background-color: #f8f9fa;
        margin: 0;
    }
    
    /* Wishlist Layout */
    .wishlist-container {
        display: flex;
        flex-wrap: wrap;
        margin: 30px 0;
        gap: 20px;
    }
    
    .wishlist-items {
        flex: 1 1 100%;
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
        padding: 20px;
    }
    
    /* Wishlist Item Styling */
    .wishlist-item {
        display: flex;
        border-bottom: 1px solid #eee;
        padding: 20px 0;
        position: relative;
    }
    
    .wishlist-item:last-child {
        border-bottom: none;
    }
    
    .item-image {
        flex: 0 0 150px;
        margin-right: 20px;
    }
    
    .item-image img {
        width: 100%;
        height: auto;
        object-fit: contain;
        border-radius: 8px;
    }
    
    .item-details {
        flex: 1;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }
    
    .item-title {
        font-size: 18px;
        font-weight: 600;
        margin: 0 0 5px;
    }
    
    .item-seller {
        font-size: 14px;
        color: #666;
        margin-bottom: 5px;
    }
    
    .item-delivery {
        font-size: 14px;
        color: #666;
        margin-bottom: 5px;
    }
    
    .item-stock {
        font-size: 14px;
        color: #82ae46;
        margin-bottom: 10px;
    }
    
    .item-price {
        font-size: 18px;
        font-weight: 600;
        color: #82ae46;
        margin-bottom: 10px;
    }
    
    .item-original-price {
        font-size: 16px;
        color: #999;
        text-decoration: line-through;
        margin-left: 10px;
    }
    
    .item-actions {
        display: flex;
        align-items: center;
        margin-top: 10px;
        gap: 10px;
    }
    
    .add-to-cart-btn {
        background: #82ae46;
        border: none;
        color: white;
        padding: 8px 16px;
        border-radius: 30px;
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
    }
    
    .add-to-cart-btn:hover {
        background: #6d9338;
        transform: scale(1.02);
    }
    
    .add-to-cart-btn:disabled {
        background: #ccc;
        cursor: not-allowed;
        transform: none;
    }
    
    .add-to-cart-btn.loading::after {
        content: '';
        display: inline-block;
        width: 16px;
        height: 16px;
        border: 2px solid #fff;
        border-top: 2px solid transparent;
        border-radius: 50%;
        animation: spin 0.5s linear infinite;
        margin-left: 8px;
        vertical-align: middle;
    }
    
    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
    
    .remove-btn {
        color: #e63946;
        background: none;
        border: none;
        font-size: 14px;
        cursor: pointer;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        padding: 8px 16px;
        transition: all 0.3s ease;
    }
    
    .remove-btn:hover {
        color: #cc2e3a;
        transform: scale(1.02);
    }
    
    /* Empty Wishlist */
    .empty-wishlist {
        text-align: center;
        padding: 40px 20px;
    }
    
    .empty-wishlist h3 {
        font-size: 24px;
        color: #666;
        margin-bottom: 20px;
    }
    
    .shop-now-btn {
        display: inline-block;
        padding: 12px 30px;
        border-radius: 30px;
        background: #82ae46;
        color: white;
        font-weight: 600;
        font-size: 16px;
        text-decoration: none;
        transition: all 0.3s ease;
    }
    
    .shop-now-btn:hover {
        background: #6d9338;
        transform: scale(1.02);
    }
    
    /* Pagination */
    .pagination {
        width: 100%;
        text-align: center;
        margin-top: 30px;
    }
    
    .pagination .btn {
        margin: 0 5px;
        padding: 8px 12px;
        border: 1px solid #82ae46;
        border-radius: 20px;
        color: #333;
        text-decoration: none;
        font-size: 14px;
        transition: all 0.3s ease;
    }
    
    .pagination .btn.active,
    .pagination .btn:hover {
        background: #82ae46;
        color: white;
    }
    
    /* Product Grid (for smaller screens) */
    .product-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }
    
    .product-card {
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
        padding: 20px;
        display: flex;
        flex-direction: column;
        height: 100%;
    }
    
    .product-card-image {
        height: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 15px;
    }
    
    .product-card-image img {
        max-height: 100%;
        max-width: 100%;
        object-fit: contain;
    }
    
    .product-card-details {
        flex: 1;
        display: flex;
        flex-direction: column;
    }
    
    .product-card-title {
        font-size: 16px;
        font-weight: 600;
        margin: 0 0 10px;
    }
    
    .product-card-price {
        font-size: 16px;
        font-weight: 600;
        color: #82ae46;
        margin-bottom: 10px;
    }
    
    .product-card-actions {
        display: flex;
        justify-content: space-between;
        margin-top: auto;
    }
    
    /* Responsive */
    @media (max-width: 991px) {
        .wishlist-container {
            flex-direction: column;
        }
        
        .wishlist-items {
            width: 100%;
        }
    }
    
    @media (max-width: 767px) {
        .list-view {
            display: none;
        }
        
        .grid-view {
            display: block;
        }
    }
    
    @media (min-width: 768px) {
        .list-view {
            display: block;
        }
        
        .grid-view {
            display: none;
        }
    }
</style>

<div class="hero-wrap hero-bread" style="background-image: url('/images/ss.jpg');">
    <div class="container">
        <div class="row no-gutters slider-text align-items-center justify-content-center">
            <div class="col-md-9 ftco-animate text-center">
                <p class="breadcrumbs"><span class="mr-2"><a href="/">Home</a></span> <span>Wishlist</span></p>
                <h1 class="mb-0 bread">My Wishlist</h1>
            </div>
        </div>
    </div>
</div>

<section class="ftco-section bg-light">
    <div class="container">
        <% if (wishlistItems && wishlistItems.length > 0) { %>
            <div class="wishlist-container">
                <div class="wishlist-items">
                    <!-- List View (visible on larger screens) -->
                    <div class="list-view">
                        <% wishlistItems.forEach(function(item) { %>
                            <% if (item.productId) { %>
                                <div class="wishlist-item" data-id="<%= item.productId._id %>">
                                    <div class="item-image">
                                        <img src="/Uploads/product-images/<%= item.productId.productImage[0] %>"
                                             alt="<%= item.productId.productName || 'Product' %>"
                                             style="height: 200px; width: 100%; object-fit: contain;">
                                    </div>
                                    <div class="item-details">
                                        <div>
                                            <h3 class="item-title"><%= item.productId.productName || 'Unnamed Product' %></h3>
                                            <p class="item-seller">Seller: <%= item.productId.brand || 'Brand' %></p>
                                            <p class="item-stock"><%= item.productId.quantity > 0 ? 'In Stock' : 'Out of Stock' %> 
                                                (<%= item.productId.quantity || 0 %> available)</p>
                                        </div>
                                        <div>
                                            <p class="item-price">₹<%= item.productId.salePrice.toLocaleString() %> 
                                                <% if (item.productId.originalPrice && item.productId.originalPrice > item.productId.salePrice) { %>
                                                    <span class="item-original-price">₹<%= item.productId.originalPrice.toLocaleString() %></span>
                                                <% } %>
                                            </p>
                                            <div class="item-actions">
                                                <button class="add-to-cart-btn" <%= item.productId.quantity <= 0 ? 'disabled' : '' %> data-quantity="<%= item.productId.quantity %>">Add to Cart</button>
                                                <button class="remove-btn">Remove</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            <% } else { %>
                                <% console.log('Skipping invalid item:', item); %>
                            <% } %>
                        <% }); %>
                    </div>
                    
                    <!-- Grid View (visible on smaller screens) -->
                    <div class="grid-view">
                        <div class="product-grid">
                            <% wishlistItems.forEach(function(item) { %>
                                <% if (item.productId) { %>
                                    <div class="product-card" data-id="<%= item.productId._id %>">
                                        <div class="product-card-image">
                                            <img src="/Uploads/product-images/<%= item.productId.productImage[0] %>"
                                                 alt="<%= item.productId.productName || 'Product' %>">
                                        </div>
                                        <div class="product-card-details">
                                            <h3 class="product-card-title"><%= item.productId.productName || 'Unnamed Product' %></h3>
                                            <p class="item-seller">Seller: <%= item.productId.brand || 'Brand' %></p>
                                            <p class="item-stock"><%= item.productId.quantity > 0 ? 'In Stock' : 'Out of Stock' %></p>
                                            <p class="product-card-price">₹<%= item.productId.salePrice.toLocaleString() %> 
                                                <% if (item.productId.originalPrice && item.productId.originalPrice > item.productId.salePrice) { %>
                                                    <span class="item-original-price">₹<%= item.productId.originalPrice.toLocaleString() %></span>
                                                <% } %>
                                            </p>
                                            <div class="product-card-actions">
                                                <button class="add-to-cart-btn" <%= item.productId.quantity <= 0 ? 'disabled' : '' %> data-quantity="<%= item.productId.quantity %>">Add to Cart</button>
                                                <button class="remove-btn">Remove</button>
                                            </div>
                                        </div>
                                    </div>
                                <% } %>
                            <% }); %>
                        </div>
                    </div>
                </div>
            </div>
            
            <% if (totalPages > 1) { %>
                <div class="pagination">
                    <% if (currentPage > 1) { %>
                        <a class="btn" href="/wishlist?page=<%= currentPage - 1 %>">Previous</a>
                    <% } %>
                    <% for (let i = 1; i <= totalPages; i++) { %>
                        <a class="btn <%= i === currentPage ? 'active' : '' %>" href="/wishlist?page=<%= i %>"><%= i %></a>
                    <% } %>
                    <% if (currentPage < totalPages) { %>
                        <a class="btn" href="/wishlist?page=<%= currentPage + 1 %>">Next</a>
                    <% } %>
                </div>
            <% } %>
            
        <% } else { %>
            <div class="empty-wishlist">
                <h3>Your wishlist is empty!</h3>
                <p>Add items to your wishlist for easy access later</p>
                <a href="/shop" class="shop-now-btn">Shop Now</a>
            </div>
        <% } %>
    </div>
</section>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const addToCartBtns = document.querySelectorAll('.add-to-cart-btn');
        const removeBtns = document.querySelectorAll('.remove-btn');

        // Add to cart function
        function addToCart(productId, button) {
            const availableStock = parseInt(button.dataset.quantity);
            if (availableStock <= 0) {
                Swal.fire({
                    icon: 'error',
                    title: 'Out of Stock',
                    text: 'This item is out of stock and cannot be added to the cart.',
                    confirmButtonColor: '#82ae46',
                });
                return;
            }

            // Set loading state
            button.classList.add('loading');
            button.disabled = true;
            const originalText = button.textContent;
            button.textContent = 'Adding...';

            fetch('/cart/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ productId, quantity: 1, fromWishlist: true }),
            })
            .then(response => response.json())
            .then(data => {
                // Reset button state
                button.classList.remove('loading');
                button.disabled = availableStock > 0 ? false : true;
                button.textContent = originalText;

                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Added to Cart',
                        text: 'Item has been added to your cart and removed from your wishlist!',
                        confirmButtonColor: '#82ae46',
                        timer: 2000,
                        showConfirmButton: false
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Failed to add item to cart',
                        confirmButtonColor: '#82ae46',
                    });
                }
            })
            .catch(error => {
                // Reset button state
                button.classList.remove('loading');
                button.disabled = availableStock > 0 ? false : true;
                button.textContent = originalText;

                console.error('Error adding to cart:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Something went wrong. Please try again later.',
                    confirmButtonColor: '#82ae46',
                });
            });
        }

        // Remove from wishlist function
        function removeFromWishlist(productId) {
            fetch('/wishlist/remove', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ productId }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Removed',
                        text: 'Item has been removed from your wishlist.',
                        confirmButtonColor: '#82ae46',
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Failed to remove item from wishlist',
                        confirmButtonColor: '#82ae46',
                    });
                }
            })
            .catch(error => {
                console.error('Error removing from wishlist:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Something went wrong. Please try again later.',
                    confirmButtonColor: '#82ae46',
                });
            });
        }

        // Add to cart button event listeners
        addToCartBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                const productCard = this.closest('.wishlist-item') || this.closest('.product-card');
                const productId = productCard.dataset.id;
                
                addToCart(productId, this);
            });
        });

        // Remove button event listeners
        removeBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                const productCard = this.closest('.wishlist-item') || this.closest('.product-card');
                const productId = productCard.dataset.id;
                
                Swal.fire({
                    title: 'Remove from Wishlist?',
                    text: 'Are you sure you want to remove this item from your wishlist?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#82ae46',
                    cancelButtonColor: '#e63946',
                    confirmButtonText: 'Yes, remove it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        removeFromWishlist(productId);
                    }
                });
            });
        });

        // Check for success message in URL params
        const urlParams = new URLSearchParams(window.location.search);
        if (urlParams.get('added') === 'success') {
            Swal.fire({
                icon: 'success',
                title: 'Added to Wishlist',
                text: 'Item has been added to your wishlist!',
                confirmButtonColor: '#82ae46',
                timer: 2000,
                showConfirmButton: false
            });
            window.history.replaceState({}, document.title, '/wishlist');
        }
    });
</script>

<%- include("../../views/partials/user/footer") %>