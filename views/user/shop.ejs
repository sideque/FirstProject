<%- include("../../views/partials/user/header") %>
<style>
    /* Main Layout Adjustments */
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 15px;
    }

    /* Sidebar and Content Layout */
    .shop-row {
        display: flex;
        flex-wrap: wrap;
        margin: 0 -15px;
    }

    .sidebar-column {
        width: 25%;
        padding: 0 15px;
    }

    .products-column {
        width: 75%;
        padding: 0 15px;
    }

    /* Form Container Styling */
    .form-container {
        width: 100%;
        max-width: 280px;
        margin: 20px 0;
        background: linear-gradient(145deg, #ffffff, #f8f9fa);
        border-radius: 12px;
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
        overflow: hidden;
    }

    /* Filter Section */
    .filter-section {
        border-bottom: 1px solid #eee;
        width: 100%;
    }

    .filter-section:last-child {
        border-bottom: none;
    }

    .filter-title {
        padding: 15px 20px;
        background: transparent;
        color: #333;
        font-weight: 600;
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        width: 100%;
    }

    .filter-content {
        padding: 0 20px 20px;
        background: #fff;
        width: 100%;
    }

    /* Form Elements */
    input,
    select {
        width: 100%;
        max-width: 240px;
        padding: 10px 15px;
        border: none;
        border-radius: 25px;
        background: #f1f3f5;
        font-size: 14px;
        margin-bottom: 12px;
        transition: all 0.3s ease;
        display: block;
        margin-left: auto;
        margin-right: auto;
    }

    input:focus,
    select:focus {
        outline: none;
        background: #fff;
        box-shadow: 0 0 0 2px #82ae46;
    }

    /* Price Range */
    .price-range {
        display: flex;
        justify-content: space-between;
        gap: 10px;
        width: 100%;
        max-width: 240px;
        margin: 0 auto;
    }

    .price-range input {
        width: 115px;
        margin-bottom: 0;
    }

    /* Button Container */
    .button-container {
        display: flex;
        justify-content: space-between;
        gap: 10px;
        width: 100%;
        max-width: 240px;
        margin: 20px auto;
    }

    /* Buttons */
    .filter-button,
    .clear-button,
    .view-product {
        width: 100%;
        padding: 8px;
        border: none;
        border-radius: 20px;
        font-weight: 600;
        font-size: 12px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        cursor: pointer;
        transition: all 0.3s ease;
        text-align: center;
        text-decoration: none;
    }

    .filter-button {
        background: #82ae46;
        color: white;
    }

    .filter-button:hover {
        background: #6d9338;
        transform: scale(1.02);
    }

    .clear-button {
        background: #e63946;
        color: white;
    }

    .clear-button:hover {
        background: #cc2e3a;
        transform: scale(1.02);
    }

    .view-product {
        background: #007bff;
        color: white;
    }

    .view-product:hover {
        background: #0056b3;
        transform: scale(1.02);
    }

    /* Select Arrow */
    select {
        appearance: none;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='10' height='10' fill='%23666' viewBox='0 0 16 16'%3E%3Cpath d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right 15px center;
    }

    /* Product Grid */
    .product-grid {
        display: flex;
        flex-wrap: wrap;
        margin: 0 -15px;
    }

    .product-item {
        width: 33.333%;
        padding: 0 15px;
        margin-bottom: 30px;
    }

    /* Product Image Styling */
    .product .img-prod img {
        height: 320px;
        width: 100%;
        object-fit: contain;
        padding: 10px;
    }

    .product {
        width: 100%;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
        transition: all 0.3s ease;
    }

    .product:hover {
        transform: translateY(-5px);
    }

    /* Product Offer Styling */
    .product-offer {
        display: inline-block;
        background: #e63946;
        color: white;
        padding: 5px 10px;
        border-radius: 20px;
        font-size: 14px;
        margin-left: 10px;
    }

    .offers-section {
        margin: 15px 0;
        padding: 10px;
        background: #f8f9fa;
        border-radius: 8px;
    }

    .offers-title {
        font-size: 14px;
        font-weight: 600;
        margin-bottom: 8px;
        color: #333;
    }

    .offer-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 6px 0;
        border-bottom: 1px solid #eee;
    }

    .offer-item:last-child {
        border-bottom: none;
    }

    .offer-name {
        font-size: 13px;
        color: #555;
    }

    .offer-details {
        font-size: 13px;
        font-weight: 500;
        color: #82ae46;
    }

    /* Bottom Area Buttons */
    .bottom-area {
        display: flex;
        justify-content: space-between;
        gap: 10px;
        margin-top: 10px;
    }

    .bottom-area .btn {
        flex: 1;
        padding: 8px;
        border-radius: 20px;
        font-size: 12px;
        text-transform: uppercase;
        text-align: center;
        text-decoration: none;
    }

    .add-to-cart {
        background: #28a745;
        color: white;
    }

    .add-to-cart:hover {
        background: #218838;
        transform: scale(1.02);
    }

    .wishlist {
        background: #f8f9fa;
        color: #333;
        border: 1px solid #ddd;
    }

    .wishlist:hover {
        background: #e9ecef;
        transform: scale(1.02);
    }

    .wishlist i {
        margin-right: 5px;
    }

    .price .old-price {
        color: #999;
        text-decoration: line-through;
        margin-left: 10px;
        font-size: 14px;
    }

    /* Responsive */
    @media (max-width: 991px) {
        .sidebar-column {
            width: 100%;
            max-width: 100%;
            order: 2;
        }

        .products-column {
            width: 100%;
            order: 1;
        }

        .form-container {
            max-width: 100%;
            margin: 15px 0;
        }

        .product-item {
            width: 50%;
        }
    }

    @media (max-width: 767px) {
        .price-range {
            flex-direction: column;
            gap: 15px;
        }

        .price-range input {
            width: 100%;
            max-width: 100%;
        }

        .product-item {
            width: 100%;
        }

        .button-container {
            flex-direction: column;
            gap: 15px;
        }
    }

    .pagination .btn {
        margin: 0 5px;
        padding: 8px 12px;
        border: 1px solid #82ae46;
        border-radius: 20px;
        color: #333;
        text-decoration: none;
    }

    .pagination .btn.active,
    .pagination .btn:hover {
        background: #82ae46;
        color: white;
    }
</style>

<div class="hero-wrap hero-bread" style="background-image: url('/images/p28.jpg');">
    <div class="container">
        <div class="row no-gutters slider-text align-items-center justify-content-center">
            <div class="col-md-9 ftco-animate text-center">
                <p class="breadcrumbs"><span class="mr-2"><a href="/">Home</a></span> <span>Shop</span></p>
                <h1 class="mb-0 bread">Shop</h1>
            </div>
        </div>
    </div>
</div>

<section class="ftco-section bg-light">
    <div class="container">
        <div class="shop-row">
            <div class="sidebar-column">
                <div class="form-container">
                    <form action="/shop" method="GET" id="filterForm">
                        <div class="filter-section">
                            <div class="filter-title">Search</div>
                            <div class="filter-content">
                                <input type="text" id="search" name="search" value="<%= search || '' %>" placeholder="Search products...">
                            </div>
                            <div class="button-container">
                                <button type="submit" id="searchBtn" class="filter-button">Search</button>
                                <button type="reset" onclick="clearSearch()" class="clear-button">Clear</button>
                            </div>
                        </div>
                        <div class="filter-section">
                            <div class="filter-title">Brand</div>
                            <div class="filter-content">
                                <select id="brand" name="brand" onchange="document.getElementById('filterForm').submit()">
                                    <option value="">All Brands</option>
                                    <% brand.forEach(b => { %>
                                        <option value="<%= b._id %>" <%= selectedBrand && selectedBrand === b._id.toString() ? 'selected' : '' %>>
                                            <%= b.name %>
                                        </option>
                                    <% }) %>
                                </select>
                            </div>
                        </div>
                        <div class="filter-section">
                            <div class="filter-title">Category</div>
                            <div class="filter-content">
                                <select id="category" name="category" onchange="document.getElementById('filterForm').submit()">
                                    <option value="">All Categories</option>
                                    <% category.forEach(c => { %>
                                        <option value="<%= c._id %>" <%= selectedCategory && selectedCategory === c._id.toString() ? 'selected' : '' %>>
                                            <%= c.name %>
                                        </option>
                                    <% }) %>
                                </select>
                            </div>
                        </div>
                        <div class="filter-section">
                            <div class="filter-title">Price Range</div>
                            <div class="filter-content">
                                <select id="priceRange" name="priceRange" onchange="document.getElementById('filterForm').submit()">
                                    <option value="">All Prices</option>
                                    <option value="0-5000" <%= priceRange === '0-5000' ? 'selected' : '' %>>Low to 5000</option>
                                    <option value="5000-10000" <%= priceRange === '5000-10000' ? 'selected' : '' %>>5000 to 10000</option>
                                    <option value="10000-50000" <%= priceRange === '10000-50000' ? 'selected' : '' %>>10000 to 50000</option>
                                    <option value="50000-150000" <%= priceRange === '50000-150000' ? 'selected' : '' %>>50000 to 150000</option>
                                    <option value="150000-" <%= priceRange === '150000-' ? 'selected' : '' %>>Above 150000</option>
                                </select>
                            </div>
                        </div>
                        <div class="button-container">
                            <button type="submit" class="filter-button">Apply Filters</button>
                            <button type="reset" onclick="window.location.href='/shop'" class="clear-button">Clear</button>
                        </div>
                    </form>
                </div>
            </div>

            <div class="products-column">
                <div class="row product-grid">
                    <% if (products && products.length > 0) { %>
                        <% products.forEach(function(product) { %>
                            <div class="col-sm-12 col-md-6 col-lg-4 ftco-animate d-flex product-item">
                                <div class="product d-flex flex-column" style="width: 100%;">
                                    <a href="/product?id=<%= product._id %>" class="img-prod">
                                        <% 
                                            const imagePath = (product.formattedImages && product.formattedImages.length > 0) 
                                                ? product.formattedImages[0].url.replace('/upload/', '/upload/w_300,h_300,c_fit/')
                                                : 'https://placehold.co/300x300/darkgray/white?text=No+Image';
                                        %>
                                        <img class="img-fluid"
                                             src="<%= imagePath %>"
                                             alt="<%= product.productName %> mobile phone"
                                             style="height: 320px; width: 100%; object-fit: contain; padding: 10px;"
                                             onerror="this.src='https://placehold.co/300x300/darkgray/white?text=Image+Not+Found'; console.log('Image load failed for <%= product.productName %>');">
                                        <% if (product.productOffer && product.productOffer > 0) { %>
                                            <span class="status"><%= product.productOffer %>% Off</span>
                                        <% } %>
                                        <div class="overlay"></div>
                                    </a>
                                    <div class="text py-3 pb-4 px-3">
                                        <div class="d-flex">
                                            <div class="cat">
                                                <span><%= product.category && product.category.name ? product.category.name : 'Lifestyle' %></span>
                                            </div>
                                            <div class="rating">
                                                <p class="text-right mb-0">
                                                    <% for (let i = 0; i < 5; i++) { %>
                                                        <span class="ion-ios-star<%= i < (product.rating || 0) ? '' : '-outline' %>"></span>
                                                    <% } %>
                                                </p>
                                            </div>
                                        </div>
                                        <h3><a href="/product?id=<%= product._id %>"><%= product.productName %></a></h3>
                                        <div class="pricing">
                                            <p class="price">
                                                <span>₹<%= product.salePrice.toLocaleString('en-IN', { minimumFractionDigits: 2 }) %></span>
                                                <% if (product.productOffer && product.productOffer > 0 && product.regularPrice > product.salePrice) { %>
                                                    <span class="price-dc old-price">₹<%= product.regularPrice.toLocaleString('en-IN', { minimumFractionDigits: 2 }) %></span>
                                                    <span class="product-offer"><%= product.productOffer %>% Off</span>
                                                <% } %>
                                            </p>
                                        </div>
                                        <!-- Offers Section -->
                                        <% if (product.allOffers && product.allOffers.length > 0) { %>
                                            <div class="offers-section">
                                                <h3 class="offers-title">Available Offers</h3>
                                                <% product.allOffers.forEach(offer => { %>
                                                    <div class="offer-item">
                                                        <span class="offer-name"><%= offer.offerName %></span>
                                                        <span class="offer-details"><%= offer.offerAmount %>% Off</span>
                                                    </div>
                                                <% }) %>
                                            </div>
                                        <% } %>
                                        <div class="bottom-area">
                                            <a href="#" class="btn add-to-cart" data-id="<%= product._id %>" data-quantity="<%= product.quantity %>">Add to Cart</a>
                                            <a href="#" class="btn wishlist" data-id="<%= product._id %>">
                                                <i class="fa fa-heart"></i> Wishlist
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        <% }) %>
                    <% } else { %>
                        <p>No products available.</p>
                    <% } %>
                </div>
                <% if (totalPages > 1) { %>
                    <div class="row mt-5">
                        <div class="pagination" style="width: 100%; text-align: center;">
                            <% if (currentPage > 1) { %>
                                <a class="btn" href="/shop?page=<%= currentPage - 1 %>&category=<%= selectedCategory || '' %>&brand=<%= selectedBrand || '' %>&search=<%= search || '' %>&priceRange=<%= priceRange || '' %>">Previous</a>
                            <% } %>
                            <% for (let i = 1; i <= totalPages; i++) { %>
                                <a class="btn <%= i === currentPage ? 'active' : '' %>" href="/shop?page=<%= i %>&category=<%= selectedCategory || '' %>&brand=<%= selectedBrand || '' %>&search=<%= search || '' %>&priceRange=<%= priceRange || '' %>"><%= i %></a>
                            <% } %>
                            <% if (currentPage < totalPages) { %>
                                <a class="btn" href="/shop?page=<%= currentPage + 1 %>&category=<%= selectedCategory || '' %>&brand=<%= selectedBrand || '' %>&search=<%= search || '' %>&priceRange=<%= priceRange || '' %>">Next</a>
                            <% } %>
                        </div>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</section>

<script>
  // Reusable Error Alert
  function showError(message) {
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: message || 'Something went wrong. Please try again later.',
      confirmButtonColor: '#82ae46',
    });
  }

  // Add to Cart Function
  async function addToCart(productId, cartBtn) {
    const quantityInput = document.getElementById('cartQuantity');
    const quantity = quantityInput ? parseInt(quantityInput.value) : 1;
    const maxQuantityInput = document.getElementById('quantity');
    const maxQuantity = maxQuantityInput ? parseInt(maxQuantityInput.max) : Infinity;

    const originalText = cartBtn.textContent;

    // Validate quantity
    if (quantity > maxQuantity) {
      Swal.fire({
        icon: 'error',
        title: 'Out of Stock',
        text: `Only ${maxQuantity} items available in stock.`,
        confirmButtonColor: '#82ae46',
      });
      return;
    }

    cartBtn.classList.add('loading');
    cartBtn.disabled = true;
    cartBtn.textContent = 'Adding...';

    try {
      const response = await fetch('/cart/add', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId, quantity, fromWishlist: false }),
      });

      const data = await response.json();

      cartBtn.classList.remove('loading');
      cartBtn.disabled = false;
      cartBtn.textContent = originalText;

      if (response.ok && data.success) {
        Swal.fire({
          title: 'Success!',
          text: 'Item has been added to your cart successfully!',
          icon: 'success',
          confirmButtonText: 'Go to Cart',
          showCancelButton: true,
          cancelButtonText: 'Continue Shopping',
          confirmButtonColor: '#82ae46',
        }).then((result) => {
          if (result.isConfirmed) {
            window.location.href = '/cart';
          }
        });
      } else {
        Swal.fire({
          title: 'Error!',
          text: data.message || 'Failed to add item to cart',
          icon: 'error',
          confirmButtonText: 'OK',
          confirmButtonColor: '#82ae46',
        });
      }
    } catch (error) {
      cartBtn.classList.remove('loading');
      cartBtn.disabled = false;
      cartBtn.textContent = originalText;

      console.error('Error adding to cart:', error);
      Swal.fire({
        title: 'Error!',
        text: 'Error adding to cart. Please try again.',
        icon: 'error',
        confirmButtonText: 'OK',
        confirmButtonColor: '#82ae46',
      });
    }
  }

  // Add to Wishlist Function
  function handleWishlistClick(button, productId) {
    fetch('/addtowish', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ productId }),
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        button.classList.toggle('added');
        const icon = button.querySelector('i');
        if (icon) {
          icon.classList.toggle('fa-heart');
          icon.classList.toggle('fa-heart-o');
        }
        Swal.fire({
          toast: true,
          position: 'top-end',
          icon: 'success',
          title: 'Added to Wishlist',
          text: data.message,
          showConfirmButton: false,
          timer: 2000,
          timerProgressBar: true,
        });
      } else {
        if (data.message === 'Please log in to add to wishlist.') {
          window.location.href = '/login';
        } else {
          showError(data.message);
        }
      }
    })
    .catch(error => {
      console.error('Wishlist Error:', error);
      showError();
    });
  }

  document.addEventListener('DOMContentLoaded', function () {
    // Add to Cart - Main product
    const cartButtons = document.querySelectorAll('.cart-btn');
    cartButtons.forEach(cartBtn => {
      cartBtn.addEventListener('click', () => {
        const productId = cartBtn.dataset.id;
        addToCart(productId, cartBtn);
      });
    });

    // Add to Wishlist - Main product
    const mainWishBtn = document.querySelector('.wish-btn');
    if (mainWishBtn) {
      mainWishBtn.addEventListener('click', function () {
        const productId = this.dataset.id;
        handleWishlistClick(this, productId);
      });
    }

    // Add to Wishlist - Related Products
    const wishlistBtns = document.querySelectorAll('.wishlist');
    wishlistBtns.forEach(btn => {
      btn.addEventListener('click', function (e) {
        e.preventDefault();
        const productId = this.dataset.id;
        handleWishlistClick(this, productId);
      });
    });

    // Add to Cart - Related Products
    const addToCartBtns = document.querySelectorAll('.add-to-cart');
    addToCartBtns.forEach(btn => {
      btn.addEventListener('click', function (e) {
        e.preventDefault();
        const productId = this.dataset.id;
        const availableStock = parseInt(this.dataset.quantity);
        const originalText = this.textContent;

        if (availableStock <= 0) {
          Swal.fire({
            icon: 'error',
            title: 'Out of Stock',
            text: 'This item is out of stock and cannot be added to the cart.',
            confirmButtonColor: '#82ae46',
          });
          return;
        }

        this.classList.add('loading');
        this.disabled = true;
        this.textContent = 'Adding...';

        fetch('/cart/add', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ productId, quantity: 1, fromWishlist: false }),
        })
        .then(response => response.json())
        .then(data => {
          this.classList.remove('loading');
          this.disabled = false;
          this.textContent = originalText;

          if (data.success) {
            Swal.fire({
              title: 'Success!',
              text: 'Item has been added to your cart successfully!',
              icon: 'success',
              confirmButtonText: 'Go to Cart',
              showCancelButton: true,
              cancelButtonText: 'Continue Shopping',
              confirmButtonColor: '#82ae46',
            }).then((result) => {
              if (result.isConfirmed) {
                window.location.href = '/cart';
              }
            });
          } else {
            if (data.message === 'Please log in to add to cart.') {
              window.location.href = '/login';
            } else {
              showError(data.message);
            }
          }
        })
        .catch(error => {
          console.error('Cart Add Error:', error);
          this.classList.remove('loading');
          this.disabled = false;
          this.textContent = originalText;
          showError();
        });
      });
    });
  });

  // Clear Filters
  function clearSearch() {
    document.getElementById('search').value = '';
    document.getElementById('brand').value = '';
    document.getElementById('category').value = '';
    document.getElementById('priceRange').value = '';
    document.getElementById('filterForm').submit();
  }
</script>

<%- include("../../views/partials/user/footer") %>