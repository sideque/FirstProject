<%- include("../../views/partials/user/header") %>
<style>
    /* Main Layout Adjustments */
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 15px;
    }
    
    body {
        font-family: 'Poppins', Arial, sans-serif;
        color: #333;
        line-height: 1.6;
        background-color: #f8f9fa;
        margin: 0;
    }
    
    /* Wallet Layout */
    .wallet-container {
        display: flex;
        flex-wrap: wrap;
        margin: 30px 0;
        gap: 20px;
    }
    
    .wallet-balance {
        flex: 1 1 100%;
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
        padding: 20px;
        margin-bottom: 20px;
    }
    
    .balance-card {
        background: #82ae46;
        border-radius: 12px;
        padding: 25px;
        color: white;
        position: relative;
        overflow: hidden;
    }
    
    .card-decoration {
        position: absolute;
        top: -50px;
        right: -50px;
        width: 200px;
        height: 200px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 50%;
    }
    
    .card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }
    
    .card-title {
        font-size: 16px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 1px;
        margin: 0;
    }
    
    .card-logo {
        font-size: 18px;
        font-weight: 700;
    }
    
    .balance-amount {
        font-size: 36px;
        font-weight: 700;
        margin: 10px 0 20px;
    }
    
    .card-number {
        font-size: 14px;
        letter-spacing: 2px;
        opacity: 0.8;
        margin-bottom: 20px;
    }
    
    .card-actions {
        display: flex;
        gap: 10px;
    }
    
    .action-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        background: rgba(255, 255, 255, 0.2);
        border: none;
        color: white;
        padding: 8px 16px;
        border-radius: 30px;
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .action-btn:hover {
        background: rgba(255, 255, 255, 0.3);
        transform: scale(1.02);
    }
    
    .action-btn i {
        margin-right: 5px;
    }
    
    /* Transaction History */
    .transactions {
        flex: 1 1 100%;
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
        padding: 20px;
        margin-bottom: 20px;
    }
    
    .section-title {
        font-size: 20px;
        font-weight: 600;
        margin-bottom: 20px;
        color: #333;
    }
    
    .transaction-table {
        width: 100%;
        border-collapse: collapse;
    }
    
    .transaction-table th {
        text-align: left;
        padding: 12px 15px;
        border-bottom: 1px solid #eee;
        font-weight: 600;
        font-size: 14px;
        color: #666;
    }
    
    .transaction-table td {
        padding: 15px;
        border-bottom: 1px solid #eee;
        font-size: 14px;
    }
    
    .transaction-table tbody tr:hover {
        background-color: #f9f9f9;
    }
    
    .transaction-type {
        display: inline-block;
        padding: 4px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 600;
    }
    
    .transaction-type.credit {
        background-color: #e6f7e6;
        color: #82ae46;
    }
    
    .transaction-type.debit {
        background-color: #ffeaea;
        color: #e63946;
    }
    
    .amount {
        font-weight: 600;
    }
    
    .amount.credit {
        color: #82ae46;
    }
    
    .amount.debit {
        color: #e63946;
    }
    
    .view-btn {
        background: #f1f1f1;
        border: none;
        color: #333;
        padding: 5px 15px;
        border-radius: 20px;
        font-size: 12px;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .view-btn:hover {
        background: #e0e0e0;
    }
    
    /* Empty Wallet */
    .empty-wallet {
        text-align: center;
        padding: 40px 20px;
    }
    
    .empty-wallet h3 {
        font-size: 24px;
        color: #666;
        margin-bottom: 20px;
    }
    
    .add-money-btn {
        display: inline-block;
        padding: 12px 30px;
        border-radius: 30px;
        background: #82ae46;
        color: white;
        font-weight: 600;
        font-size: 16px;
        text-decoration: none;
        transition: all 0.3s ease;
    }
    
    .add-money-btn:hover {
        background: #6d9338;
        transform: scale(1.02);
    }
    
    /* Payment Methods */
    .payment-methods {
        flex: 1 1 100%;
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
        padding: 20px;
    }
    
    .payment-cards {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
    }
    
    .payment-card {
        flex: 1 1 calc(33.333% - 15px);
        min-width: 250px;
        border: 1px solid #eee;
        border-radius: 12px;
        padding: 15px;
        display: flex;
        align-items: center;
        transition: all 0.3s ease;
    }
    
    .payment-card:hover {
        border-color: #82ae46;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
    }
    
    .payment-card.default {
        border-color: #82ae46;
        background-color: rgba(130, 174, 70, 0.05);
    }
    
    .payment-icon {
        width: 40px;
        height: 40px;
        margin-right: 15px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 8px;
        background: #f1f1f1;
    }
    
    .payment-info {
        flex: 1;
    }
    
    .payment-name {
        font-weight: 600;
        margin: 0 0 5px;
    }
    
    .payment-details {
        font-size: 13px;
        color: #666;
    }
    
    .default-badge {
        font-size: 11px;
        padding: 2px 8px;
        background: #82ae46;
        color: white;
        border-radius: 10px;
        margin-left: 10px;
    }
    
    .add-payment-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
        border: 1px dashed #ccc;
        border-radius: 12px;
        padding: 15px;
        font-weight: 600;
        color: #666;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .add-payment-btn:hover {
        border-color: #82ae46;
        color: #82ae46;
    }
    
    .add-payment-btn i {
        margin-right: 5px;
        font-size: 18px;
    }
    
    /* Responsive Styles */
    @media (max-width: 991px) {
        .wallet-container {
            flex-direction: column;
        }
        
        .payment-card {
            flex: 1 1 calc(50% - 15px);
        }
    }
    
    @media (max-width: 767px) {
        .payment-card {
            flex: 1 1 100%;
        }
        
        .balance-amount {
            font-size: 28px;
        }
        
        .transaction-table-wrapper {
            overflow-x: auto;
        }
        
        .transaction-table {
            min-width: 600px;
        }
    }
</style>

<div class="hero-wrap hero-bread" style="background-image: url('/images/ss.jpg');">
    <div class="container">
        <div class="row no-gutters slider-text align-items-center justify-content-center">
            <div class="col-md-9 ftco-animate text-center">
                <p class="breadcrumbs"><span class="mr-2"><a href="/">Home</a></span> <span>My Wallet</span></p>
                <h1 class="mb-0 bread">My Wallet</h1>
            </div>
        </div>
    </div>
</div>

<section class="ftco-section bg-light">
    <div class="container">
      <% if (user && wallet) { %>
        <div class="wallet-container">
          <!-- Wallet Balance Card (unchanged) -->
          <div class="wallet-balance">
            <div class="balance-card">
              <div class="card-decoration"></div>
              <div class="card-header">
                <h3 class="card-title"><%= user.firstName ? user.firstName.toUpperCase() : 'USER' %>'S WALLET</h3>
                <div class="card-logo">Mobivault</div>
              </div>
              <div class="balance-amount">₹<%= wallet.balance.toLocaleString('en-IN') %></div>
              <div class="card-number">**** **** **** <%= user.phone ? user.phone.substring(user.phone.length - 4) : '1234' %></div>
              <div class="card-actions">
                <button class="action-btn" id="addMoneyBtn">
                  <i class="fas fa-plus"></i> Add Money
                </button>
                <button class="action-btn" id="transferBtn">
                  <i class="fas fa-arrow-right"></i> Transfer
                </button>
              </div>
            </div>
          </div>
  
          <!-- Transaction History -->
          <div class="transactions">
            <h3 class="section-title">Transaction History</h3>
            <% if (transactions && transactions.length > 0) { %>
              <div class="transaction-table-wrapper">
                <table class="transaction-table">
                  <thead>
                    <tr>
                      <th>Amount</th>
                      <th>Type</th>
                      <th>Date</th>
                      <th>Transaction ID</th>
                      <th>Payment Method</th>
                      <th>Description</th>
                      <th>Order ID</th>
                      <th>Details</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% transactions.forEach(function(transaction) { %>
                      <tr>
                        <td class="amount <%= transaction.type.toLowerCase() %>">
                          <%= transaction.type.toLowerCase() === 'credit' ? '+' : '-' %>₹<%= transaction.amount.toLocaleString('en-IN') %>
                        </td>
                        <td>
                          <span class="transaction-type <%= transaction.type.toLowerCase() %>">
                            <%= transaction.type %>
                          </span>
                        </td>
                        <td><%= new Date(transaction.date).toLocaleDateString('en-IN') %></td>
                        <td><%= transaction.transactionId || '-' %></td>
                        <td>
                          <% if (transaction.paymentMethod) { %>
                            <div style="display: flex; align-items: center;">
                              <% if (transaction.paymentMethod.toLowerCase().includes('refund')) { %>
                                <i class="fas fa-sync-alt mr-2"></i>
                              <% } else if (transaction.paymentMethod.toLowerCase().includes('credit')) { %>
                                <i class="fas fa-credit-card mr-2"></i>
                              <% } else if (transaction.paymentMethod.toLowerCase().includes('wallet')) { %>
                                <i class="fas fa-wallet mr-2"></i>
                              <% } else { %>
                                <i class="fas fa-money-bill mr-2"></i>
                              <% } %>
                              <%= transaction.paymentMethod %>
                            </div>
                          <% } else { %>
                            -
                          <% } %>
                        </td>
                        <td><%= transaction.description || '-' %></td>
                        <td><%= transaction.orderId || '-' %></td>
                        <td>
                          <button class="view-btn" data-transaction-id="<%= transaction._id || '-' %>">View</button>
                        </td>
                      </tr>
                    <% }); %>
                  </tbody>
                </table>
              </div>
  
              <% if (totalTransactions > perPage) { %>
                <div class="pagination" style="margin-top: 20px; text-align: center;">
                  <% if (currentPage > 1) { %>
                    <a class="btn" href="/wallet?page=<%= currentPage - 1 %>">Previous</a>
                  <% } %>
                  <% for (let i = 1; i <= Math.ceil(totalTransactions / perPage); i++) { %>
                    <a class="btn <%= i === currentPage ? 'active' : '' %>" href="/wallet?page=<%= i %>"><%= i %></a>
                  <% } %>
                  <% if (currentPage < Math.ceil(totalTransactions / perPage)) { %>
                    <a class="btn" href="/wallet?page=<%= currentPage + 1 %>">Next</a>
                  <% } %>
                </div>
              <% } %>
            <% } else { %>
              <div class="empty-wallet">
                <h3>No transactions yet!</h3>
                <p>Add money to your wallet or make purchases to see transaction history</p>
              </div>
            <% } %>
          </div>
  
          <!-- Payment Methods (unchanged) -->
          <!-- <div class="payment-methods">
            <h3 class="section-title">Payment Methods</h3>
            <div class="payment-cards">
              <% if (paymentMethods && paymentMethods.length > 0) { %>
                <% paymentMethods.forEach(function(method) { %>
                  <div class="payment-card <%= method.isDefault ? 'default' : '' %>">
                    <div class="payment-icon">
                      <% if (method.type === 'credit-card') { %>
                        <i class="fas fa-credit-card"></i>
                      <% } else if (method.type === 'paypal') { %>
                        <i class="fab fa-paypal"></i>
                      <% } else if (method.type === 'bank') { %>
                        <i class="fas fa-university"></i>
                      <% } %>
                    </div>
                    <div class="payment-info">
                      <h4 class="payment-name">
                        <%= method.type.replace('-', ' ').toUpperCase() %>
                        <% if (method.isDefault) { %>
                          <span class="default-badge">Default</span>
                        <% } %>
                      </h4>
                      <div class="payment-details"><%= method.details %></div>
                    </div>
                  </div>
                <% }); %>
              <% } %>
              <div class="add-payment-btn">
                <i class="fas fa-plus"></i> Add Payment Method
              </div>
            </div>
          </div> -->


        </div>
      <% } else { %>
        <div class="empty-wallet">
          <h3>No wallet found!</h3>
          <p>Please add money to activate your wallet</p>
          <a href="#" class="add-money-btn" id="createWalletBtn">Add Money</a>
        </div>
      <% } %>
    </div>
  </section>
  
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      // Add Money Button
      const addMoneyBtn = document.getElementById('addMoneyBtn');
      if (addMoneyBtn) {
        addMoneyBtn.addEventListener('click', function () {
          Swal.fire({
            title: 'Add Money to Wallet',
            html: `
              <div class="form-group">
                <label for="amount" class="text-left">Amount (₹)</label>
                <input type="number" id="amount" class="form-control" min="100" placeholder="Enter amount" required>
              </div>
              <div class="form-group mt-3">
                <label for="paymentMethod" class="text-left">Payment Method</label>
                <select id="paymentMethod" class="form-control">
                  <option value="credit-card">Credit Card</option>
                  <option value="debit-card">Debit Card</option>
                  <option value="upi">UPI</option>
                  <option value="net-banking">Net Banking</option>
                </select>
              </div>
            `,
            showCancelButton: true,
            confirmButtonColor: '#82ae46',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Add Money',
            preConfirm: () => {
              const amount = document.getElementById('amount').value;
              const paymentMethod = document.getElementById('paymentMethod').value;
              if (!amount || amount < 100) {
                Swal.showValidationMessage('Please enter an amount of at least ₹100');
                return false;
              }
              return { amount, paymentMethod };
            },
          }).then((result) => {
            if (result.isConfirmed) {
              Swal.fire({
                icon: 'info',
                title: 'Processing Payment',
                text: 'Please wait while we process your payment...',
                allowOutsideClick: false,
                showConfirmButton: false,
                willOpen: () => {
                  Swal.showLoading();
                },
              });
  
              setTimeout(() => {
                fetch('/wallet/add-money', {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                  body: JSON.stringify({
                    amount: result.value.amount,
                    paymentMethod: result.value.paymentMethod,
                  }),
                })
                  .then((response) => response.json())
                  .then((data) => {
                    if (data.success) {
                      Swal.fire({
                        icon: 'success',
                        title: 'Money Added!',
                        text: `₹${result.value.amount} has been added to your wallet successfully!`,
                        confirmButtonColor: '#82ae46',
                      }).then(() => {
                        window.location.reload();
                      });
                    } else {
                      Swal.fire({
                        icon: 'error',
                        title: 'Transaction Failed',
                        text: data.message || 'Something went wrong. Please try again.',
                        confirmButtonColor: '#82ae46',
                      });
                    }
                  })
                  .catch((error) => {
                    console.error('Error:', error);
                    Swal.fire({
                      icon: 'error',
                      title: 'Transaction Failed',
                      text: 'Something went wrong. Please try again.',
                      confirmButtonColor: '#82ae46',
                    });
                  });
              }, 2000);
            }
          });
        });
      }
  
      // Transfer Button
      const transferBtn = document.getElementById('transferBtn');
      if (transferBtn) {
        transferBtn.addEventListener('click', function () {
          Swal.fire({
            title: 'Transfer Money',
            html: `
              <div class="form-group">
                <label for="recipientId" class="text-left">Recipient ID or Email</label>
                <input type="text" id="recipientId" class="form-control" placeholder="Enter recipient ID or email" required>
              </div>
              <div class="form-group mt-3">
                <label for="transferAmount" class="text-left">Amount (₹)</label>
                <input type="number" id="transferAmount" class="form-control" min="10" placeholder="Enter amount" required>
              </div>
              <div class="form-group mt-3">
                <label for="transferNote" class="text-left">Note (Optional)</label>
                <textarea id="transferNote" class="form-control" placeholder="Add a note"></textarea>
              </div>
            `,
            showCancelButton: true,
            confirmButtonColor: '#82ae46',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Transfer',
            preConfirm: () => {
              const recipientId = document.getElementById('recipientId').value;
              const amount = document.getElementById('transferAmount').value;
              const note = document.getElementById('transferNote').value;
              if (!recipientId) {
                Swal.showValidationMessage('Please enter recipient ID or email');
                return false;
              }
              if (!amount || amount < 10) {
                Swal.showValidationMessage('Please enter an amount of at least ₹10');
                return false;
              }
              return { recipientId, amount, note };
            },
          }).then((result) => {
            if (result.isConfirmed) {
              Swal.fire({
                icon: 'info',
                title: 'Processing Transfer',
                text: 'Please wait while we process your transfer...',
                allowOutsideClick: false,
                showConfirmButton: false,
                willOpen: () => {
                  Swal.showLoading();
                },
              });
  
              setTimeout(() => {
                fetch('/wallet/transfer', {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                  body: JSON.stringify({
                    recipient: result.value.recipientId,
                    amount: result.value.amount,
                    note: result.value.note,
                  }),
                })
                  .then((response) => response.json())
                  .then((data) => {
                    if (data.success) {
                      Swal.fire({
                        icon: 'success',
                        title: 'Transfer Successful!',
                        text: `₹${result.value.amount} has been transferred successfully!`,
                        confirmButtonColor: '#82ae46',
                      }).then(() => {
                        window.location.reload();
                      });
                    } else {
                      Swal.fire({
                        icon: 'error',
                        title: 'Transfer Failed',
                        text: data.message || 'Something went wrong. Please try again.',
                        confirmButtonColor: '#82ae46',
                      });
                    }
                  })
                  .catch((error) => {
                    console.error('Error:', error);
                    Swal.fire({
                      icon: 'error',
                      title: 'Transfer Failed',
                      text: 'Something went wrong. Please try again.',
                      confirmButtonColor: '#82ae46',
                    });
                  });
              }, 2000);
            }
          });
        });
      }
  
      // View Transaction Details
      const viewBtns = document.querySelectorAll('.view-btn');
      viewBtns.forEach((btn) => {
        btn.addEventListener('click', function () {
          const transactionId = this.getAttribute('data-transaction-id');
          fetch(`/wallet/transaction/${transactionId}`)
            .then((response) => response.json())
            .then((data) => {
              if (data.success) {
                const { transaction } = data;
                Swal.fire({
                  title: 'Transaction Details',
                  html: `
                    <div style="text-align: left; padding: 20px;">
                      <p><strong>Transaction ID:</strong> ${transaction.transactionId || '-'}</p>
                      <p><strong>Amount:</strong> ₹${transaction.amount.toLocaleString('en-IN')}</p>
                      <p><strong>Type:</strong> ${transaction.type}</p>
                      <p><strong>Date:</strong> ${new Date(transaction.date).toLocaleDateString('en-IN')}</p>
                      <p><strong>Payment Method:</strong> ${transaction.paymentMethod || '-'}</p>
                      <p><strong>Order ID:</strong> ${transaction.orderId || '-'}</p>
                      <p><strong>Description:</strong> ${transaction.description || '-'}</p>
                      <p><strong>Status:</strong> <span class="badge badge-success">Completed</span></p>
                    </div>
                  `,
                  confirmButtonColor: '#82ae46',
                  confirmButtonText: 'Close',
                  width: '600px',
                });
              } else {
                Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: data.message,
                  confirmButtonColor: '#82ae46',
                });
              }
            })
            .catch((error) => {
              console.error('Error:', error);
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Failed to load transaction details',
                confirmButtonColor: '#82ae46',
              });
            });
        });
      });
  
      // Create Wallet Button
      const createWalletBtn = document.getElementById('createWalletBtn');
      if (createWalletBtn) {
        createWalletBtn.addEventListener('click', function () {
          addMoneyBtn.click();
        });
      }
    });
  </script>
  
  <%- include("../../views/partials/user/footer") %>